const { respParam, sense } = require('./consts.js')

module.exports = {
	record_mode: [
		{ id: respParam.recordModeSelect.record, label: 'Record' },
		{ id: respParam.recordModeSelect.recordPause, label: 'Record Pause' },
		{ id: respParam.recordModeSelect.takeSplit, label: 'Take Split' },
	],
	search_mode: [
		{ id: respParam.searchModeSelect.forwardNormal, label: 'Forward - Normal' },
		{ id: respParam.searchModeSelect.reverseNormal, label: 'Reverse - Normal' },
		{ id: respParam.searchModeSelect.forwardHigh, label: 'Forward - High' },
		{ id: respParam.searchModeSelect.reverseHigh, label: 'Reverse - High' },
	],
	skip_mode: [
		{ id: respParam.skipModeSelect.trackSkipNext, label: 'Track Skip Next' },
		{ id: respParam.skipModeSelect.trackSkipPrevious, label: 'Track Skip Previous' },
		{ id: respParam.skipModeSelect.markSkipNext, label: 'Mark Skip Next' },
		{ id: respParam.skipModeSelect.markSkipPrevious, label: 'Mark Skip Previous' },
	],
	repeat_mode: [
		{ id: respParam.repeatModeSelectReturn.off, label: 'Repeat Off' },
		{ id: respParam.repeatModeSelectReturn.normal, label: 'Repeat Normal' },
		{ id: respParam.repeatModeSelectReturn.vamping, label: 'Repeat Vamping' },
		{ id: sense, label: 'Sense' },
	],
	remoteLocal_mode: [
		{ id: respParam.remoteLocalSelectReturn.remote, label: 'Remote' },
		{ id: respParam.remoteLocalSelectReturn.local, label: 'Local' },
		{ id: sense, label: 'Sense' },
	],
	play_mode: [
		{ id: respParam.playModeReturn.allTake, label: 'All Take' },
		{ id: respParam.playModeReturn.oneTake, label: 'One Take' },
	],
	currentTrackTime_sense: [
		{ id: respParam.currentTrackTimeSelect.elapsedTime, label: 'Elapsed Time' },
		{ id: respParam.currentTrackTimeSelect.remainTime, label: 'Remain Time' },
		{ id: respParam.currentTrackTimeSelect.totalElapsedTime, label: 'Total Elapsed Time' },
		{ id: respParam.currentTrackTimeSelect.totalRemainTime, label: 'Total Remain Time' },
		{ id: respParam.currentTrackTimeSelect.timecodeTime, label: 'Timecode Time' },
	],
	projectSkip_mode: [
		{ id: respParam.projectSkipModeSelect.projectNext, label: 'Project Next' },
		{ id: respParam.projectSkipModeSelect.projectPrevious, label: 'Project Previous' },
	],
	chase_mode: [
		{ id: respParam.chaseReturn.off, label: 'Chase OFF' },
		{ id: respParam.chaseReturn.on, label: 'Chase ON' },
		{ id: sense, label: 'Sense' },
	],
	tcGeneratorSelect_mode: [
		{ id: respParam.tcGeneratorModeReturn.freeRun, label: 'Free Run' },
		{ id: respParam.tcGeneratorModeReturn.freeOnce, label: 'Free Once' },
		{ id: respParam.tcGeneratorModeReturn.timeOfDay, label: 'Time Of Day' },
		{ id: respParam.tcGeneratorModeReturn.jamSync, label: 'Jam Sync' },
		{ id: respParam.tcGeneratorModeReturn.regen, label: 'Regen' },
		{ id: respParam.tcGeneratorModeReturn.recRun, label: 'Rec Run' },
		{ id: respParam.tcGeneratorModeReturn.tcSyncRec, label: 'TC Sync Rec' },
		{ id: sense, label: 'Sense' },
	],
	tcFrameTypeSelect_mode: [
		{ id: respParam.tcFrameTypeReturn[23976], label: '23.976F' },
		{ id: respParam.tcFrameTypeReturn[24], label: '24F' },
		{ id: respParam.tcFrameTypeReturn[25], label: '25F' },
		{ id: respParam.tcFrameTypeReturn['DF2997'], label: '29.97DF' },
		{ id: respParam.tcFrameTypeReturn[2997], label: '29.97NDF' },
		{ id: respParam.tcFrameTypeReturn['DF30'], label: '30DF' },
		{ id: respParam.tcFrameTypeReturn[30], label: '30NDF' },
		{ id: sense, label: 'Sense' },
	],
	tcOutputSelect_mode: [
		{ id: respParam.tcOutputModeReturn.generator, label: 'Generator Out' },
		{ id: respParam.tcOutputModeReturn.play, label: 'Play Out' },
		{ id: sense, label: 'Sense' },
	],
	clockMasterSelect_mode: [
		{ id: respParam.clockMasterReturn.internal, label: 'Internal' },
		{ id: respParam.clockMasterReturn.word, label: 'Word' },
		{ id: respParam.clockMasterReturn.video, label: 'Video' },
		{ id: respParam.clockMasterReturn.slot1, label: 'Slot 1' },
		{ id: respParam.clockMasterReturn.slot2, label: 'Slot 2' },
		{ id: sense, label: 'Sense' },
	],
	wordThruSelect_mode: [
		{ id: respParam.wordThruReturn.wordOutTermOn, label: 'WORD OUT/TERM ON' },
		{ id: respParam.wordThruReturn.wordOutTermOff, label: 'WORD OUT/TERM OFF' },
		{ id: respParam.wordThruReturn.wordThruTermOff, label: 'WORD THRU/TERM OFF' },
		{ id: sense, label: 'Sense' },
	],
	recordFunctionSelect_tracks: [
		{ id: 1, label: 'Track 1' },
		{ id: 2, label: 'Track 2' },
		{ id: 3, label: 'Track 3' },
		{ id: 4, label: 'Track 4' },
		{ id: 5, label: 'Track 5' },
		{ id: 6, label: 'Track 6' },
		{ id: 7, label: 'Track 7' },
		{ id: 8, label: 'Track 8' },
		{ id: 9, label: 'Track 9' },
		{ id: 10, label: 'Track 10' },
		{ id: 11, label: 'Track 11' },
		{ id: 12, label: 'Track 12' },
		{ id: 13, label: 'Track 13' },
		{ id: 14, label: 'Track 14' },
		{ id: 15, label: 'Track 15' },
		{ id: 16, label: 'Track 16' },
		{ id: 17, label: 'Track 17' },
		{ id: 18, label: 'Track 18' },
		{ id: 19, label: 'Track 19' },
		{ id: 20, label: 'Track 20' },
		{ id: 21, label: 'Track 21' },
		{ id: 22, label: 'Track 22' },
		{ id: 23, label: 'Track 23' },
		{ id: 24, label: 'Track 24' },
		{ id: 25, label: 'Track 25' },
		{ id: 26, label: 'Track 26' },
		{ id: 27, label: 'Track 27' },
		{ id: 28, label: 'Track 28' },
		{ id: 29, label: 'Track 29' },
		{ id: 30, label: 'Track 30' },
		{ id: 31, label: 'Track 31' },
		{ id: 32, label: 'Track 32' },
		{ id: 33, label: 'Track 33' },
		{ id: 34, label: 'Track 34' },
		{ id: 35, label: 'Track 35' },
		{ id: 36, label: 'Track 36' },
		{ id: 37, label: 'Track 37' },
		{ id: 38, label: 'Track 38' },
		{ id: 39, label: 'Track 39' },
		{ id: 40, label: 'Track 40' },
		{ id: 41, label: 'Track 41' },
		{ id: 42, label: 'Track 42' },
		{ id: 43, label: 'Track 43' },
		{ id: 44, label: 'Track 44' },
		{ id: 45, label: 'Track 45' },
		{ id: 46, label: 'Track 46' },
		{ id: 47, label: 'Track 47' },
		{ id: 48, label: 'Track 48' },
		{ id: 49, label: 'Track 49' },
		{ id: 50, label: 'Track 50' },
		{ id: 51, label: 'Track 51' },
		{ id: 52, label: 'Track 52' },
		{ id: 53, label: 'Track 53' },
		{ id: 54, label: 'Track 54' },
		{ id: 55, label: 'Track 55' },
		{ id: 56, label: 'Track 56' },
		{ id: 57, label: 'Track 57' },
		{ id: 58, label: 'Track 58' },
		{ id: 59, label: 'Track 59' },
		{ id: 60, label: 'Track 60' },
		{ id: 61, label: 'Track 61' },
		{ id: 62, label: 'Track 62' },
		{ id: 63, label: 'Track 63' },
		{ id: 64, label: 'Track 64' },
	],
	bitLengthSelect_mode: [
		{ id: respParam.bitLengthReturn[16], label: '16bit' },
		{ id: respParam.bitLengthReturn[24], label: '24bit' },
		{ id: sense, label: 'Sense' },
	],
	pause_mode: [
		{ id: respParam.pauseModeReturn.split, label: 'Split' },
		{ id: respParam.pauseModeReturn.noSplit, label: 'No Split' },
		{ id: sense, label: 'Sense' },
	],
	audioOverMarketSelect_mode: [
		{ id: respParam.audioOverMarkerReturn.off, label: 'Marker Off' },
		{ id: respParam.audioOverMarkerReturn.on, label: 'Marker On' },
		{ id: sense, label: 'Sense' },
	],
	timeInternalMarkerSelect_mode: [
		{ id: respParam.timeIntervalMarkerReturn.off, label: 'Marker Off' },
		{ id: respParam.timeIntervalMarkerReturn.on, label: 'Marker On' },
		{ id: sense, label: 'Sense' },
	],
	syncUnlockMarkerSelect_mode: [
		{ id: respParam.syncUnlockMarkerReturn.off, label: 'Marker Off' },
		{ id: respParam.syncUnlockMarkerReturn.on, label: 'Marker On' },
		{ id: sense, label: 'Sense' },
	],
	recFsSelect_mode: [
		{ id: respParam.recFsReturn[44], label: '44.1 kHz' },
		{ id: respParam.recFsReturn[48], label: '48 kHz' },
		{ id: respParam.recFsReturn[88], label: '88.2 kHz' },
		{ id: respParam.recFsReturn[96], label: '96 kHz' },
		{ id: sense, label: 'Sense' },
	],
	fileNameSelect_mode: [
		{ id: respParam.fileNameReturn.dateTime, label: 'Date & Time' },
		{ id: respParam.fileNameReturn.folder, label: 'Folder' },
		{ id: respParam.fileNameReturn.userWord, label: 'User Word' },
		{ id: sense, label: 'Sense' },
	],
	mediaRemainSense_mode: [
		{ id: respParam.mediaRemainSenseMode.ssd, label: 'SSD' },
		{ id: respParam.mediaRemainSenseMode.usb, label: 'USB' },
	],
	mediaFormat_mode: [
		{ id: respParam.mediaFormatMode.quickFormatSSD, label: 'Quick Format: SSD' },
		{ id: respParam.mediaFormatMode.fullFormatSSD, label: 'Full Format: SSD' },
	],
	auxAssignKeySelect_auxKey: [
		{ id: respParam.auxAssignKeyReturn.key[1], label: 'AUX 1' },
		{ id: respParam.auxAssignKeyReturn.key[2], label: 'AUX 2' },
		{ id: respParam.auxAssignKeyReturn.key[3], label: 'AUX 3' },
		{ id: respParam.auxAssignKeyReturn.key[4], label: 'AUX 4' },
		{ id: respParam.auxAssignKeyReturn.key[5], label: 'AUX 5' },
		{ id: respParam.auxAssignKeyReturn.key[6], label: 'AUX 6' },
	],
	auxAssignKeySelect_function: [
		{ id: respParam.auxAssignKeyReturn.mode.playPause, label: 'PLAY/PAUSE' },
		{ id: respParam.auxAssignKeyReturn.mode.pause, label: 'PAUSE' },
		{ id: respParam.auxAssignKeyReturn.mode.rec, label: 'REC' },
		{ id: respParam.auxAssignKeyReturn.mode.faderRec, label: 'FADER REC' },
		{ id: respParam.auxAssignKeyReturn.mode.faderStart, label: 'FADER START' },
		{ id: respParam.auxAssignKeyReturn.mode.rew, label: 'REW' },
		{ id: respParam.auxAssignKeyReturn.mode.ffwd, label: 'F.FWD' },
		{ id: respParam.auxAssignKeyReturn.mode.takeMarkSkipBack, label: 'TAKE SKIP-' },
		{ id: respParam.auxAssignKeyReturn.mode.takeMarkSkipFwd, label: 'TAKE SKIP+' },
		{ id: respParam.auxAssignKeyReturn.mode.markSkipBack, label: 'MARK SKIP-' },
		{ id: respParam.auxAssignKeyReturn.mode.markSkipFwd, label: 'MARK SKIP+' },
		{ id: respParam.auxAssignKeyReturn.mode.takeMarkSkipBack, label: 'TAKE/MARK SKIP-' },
		{ id: respParam.auxAssignKeyReturn.mode.takeMarkSkipFwd, label: 'TAKE/MARK SKIP+' },
		{ id: respParam.auxAssignKeyReturn.mode.mark, label: 'MARK' },
		{ id: sense, label: 'Sense' },
	],
	auxAssignKeyTallySelect_auxKey: [
		{ id: respParam.auxAssignTallyReturn.tally[1], label: 'AUX 1' },
		{ id: respParam.auxAssignTallyReturn.tally[2], label: 'AUX 2' },
		{ id: respParam.auxAssignTallyReturn.tally[3], label: 'AUX 3' },
		{ id: respParam.auxAssignTallyReturn.tally[4], label: 'AUX 4' },
		{ id: respParam.auxAssignTallyReturn.tally[5], label: 'AUX 5' },
	],
	auxAssignKeyTallySelect_function: [
		{ id: respParam.auxAssignTallyReturn.mode.stop, label: 'STOP' },
		{ id: respParam.auxAssignTallyReturn.mode.play, label: 'PLAY' },
		{ id: respParam.auxAssignTallyReturn.mode.pause, label: 'PAUSE' },
		{ id: respParam.auxAssignTallyReturn.mode.rec, label: 'REC' },
		{ id: respParam.auxAssignTallyReturn.mode.eom, label: 'EOM' },
		{ id: respParam.auxAssignTallyReturn.mode.error, label: 'ERROR' },
		{ id: respParam.auxAssignTallyReturn.mode.eomError, label: 'EOM/ERROR' },
		{ id: sense, label: 'Sense' },
	],
	meterPeakHoldTimePreset_mode: [
		{ id: respParam.meterPeakTimeReturn[0], label: 'Hold Time 0s' },
		{ id: respParam.meterPeakTimeReturn[1], label: 'Hold Time 1s' },
		{ id: respParam.meterPeakTimeReturn[2], label: 'Hold Time 2s' },
		{ id: respParam.meterPeakTimeReturn[3], label: 'Hold Time 3s' },
		{ id: respParam.meterPeakTimeReturn[4], label: 'Hold Time 4s' },
		{ id: respParam.meterPeakTimeReturn[5], label: 'Hold Time 5s' },
		{ id: respParam.meterPeakTimeReturn[6], label: 'Hold Time 6s' },
		{ id: respParam.meterPeakTimeReturn[7], label: 'Hold Time 7s' },
		{ id: respParam.meterPeakTimeReturn[8], label: 'Hold Time 8s' },
		{ id: respParam.meterPeakTimeReturn[9], label: 'Hold Time 9s' },
		{ id: respParam.meterPeakTimeReturn[10], label: 'Hold Time 10s' },
		{ id: respParam.meterPeakTimeReturn['inf'], label: 'Hold Time Inf.' },
		{ id: sense, label: 'Sense' },
	],
	digitalReferenceLevelPreset_mode: [
		{ id: respParam.digitalReferenceLevelReturn[9], label: 'Reference Level - 9dB' },
		{ id: respParam.digitalReferenceLevelReturn[14], label: 'Reference Level -14dB' },
		{ id: respParam.digitalReferenceLevelReturn[16], label: 'Reference Level -16dB' },
		{ id: respParam.digitalReferenceLevelReturn[18], label: 'Reference Level -18dB' },
		{ id: respParam.digitalReferenceLevelReturn[20], label: 'Reference Level -20dB' },
		{ id: sense, label: 'Sense' },
	],
	directTrackSearchPreset_mode: [
		{ id: respParam.directTrackSearchPresetMode.stop, label: 'Stop' },
		{ id: respParam.directTrackSearchPresetMode.play, label: 'Play' },
		{ id: respParam.directTrackSearchPresetMode.pause, label: 'Pause' },
	],
	mechaStatus_feedback: [
		{ id: respParam.mechaStatusReturn.noMedia, label: 'No Media' },
		{ id: respParam.mechaStatusReturn.stop, label: 'Stop' },
		{ id: respParam.mechaStatusReturn.play, label: 'Play' },
		{ id: respParam.mechaStatusReturn.readyOn, label: 'Ready On (Pause)' },
		{ id: respParam.mechaStatusReturn.cue, label: 'Cue (Searching Forward)' },
		{ id: respParam.mechaStatusReturn.review, label: 'Review (Searching Backward)' },
		{ id: respParam.mechaStatusReturn.record, label: 'Record' },
		{ id: respParam.mechaStatusReturn.recordReady, label: 'Record Ready' },
		{ id: respParam.mechaStatusReturn.infomationWriting, label: 'Information Writing' },
		{ id: respParam.mechaStatusReturn.other, label: 'Other' },
	],
	errorSense_feedback: [
		{ id: respParam.errorSenseReturn.noError, label: 'No Error' },
		{ id: respParam.errorSenseReturn.recError, label: 'Rec Error' },
		{ id: respParam.errorSenseReturn.deviceError, label: 'Device Error' },
		{ id: respParam.errorSenseReturn.infoWriteError, label: 'Info Write Error' },
		{ id: respParam.errorSenseReturn.otherError, label: 'Other Error' },
	],
	cautionSense_feedback: [
		{ id: respParam.cautionSenseReturn.noCaution, label: 'No Caution' },
		{ id: respParam.cautionSenseReturn.mediaError, label: 'Media Error' },
		{ id: respParam.cautionSenseReturn.mediaFull, label: 'Media Full' },
		{ id: respParam.cautionSenseReturn.takeFull, label: 'Take Full' },
		{ id: respParam.cautionSenseReturn.digitalUnlock, label: 'Digital Unlock' },
		{ id: respParam.cautionSenseReturn.cantRec, label: "Can't Rec" },
		{ id: respParam.cautionSenseReturn.writeProtected, label: 'Write Protected' },
		{ id: respParam.cautionSenseReturn.notExecute, label: 'Not Execute' },
		{ id: respParam.cautionSenseReturn.cantEdit, label: "Can't Edit" },
		{ id: respParam.cautionSenseReturn.cantSelect, label: "Can't Select" },
		{ id: respParam.cautionSenseReturn.trackProtected, label: 'Track Protected' },
		{ id: respParam.cautionSenseReturn.nameFull, label: 'Name Full' },
		{ id: respParam.cautionSenseReturn.playError, label: 'Play Error' },
		{ id: respParam.cautionSenseReturn.otherCaution, label: 'Other Caution' },
	],
	psuError_feedback: [
		{ id: respParam.psuErrorReturn.error, label: 'PSU Fault' },
		{ id: respParam.psuErrorReturn.ok, label: 'PSU OK' },
	],
	repeat_feedback: [
		{ id: respParam.repeatModeSelectReturn.off, label: 'Repeat Off' },
		{ id: respParam.repeatModeSelectReturn.normal, label: 'Repeat Normal' },
		{ id: respParam.repeatModeSelectReturn.vamping, label: 'Repeat Vamping' },
	],
	remoteLocal_feedback: [
		{ id: respParam.remoteLocalSelectReturn.remote, label: 'Remote' },
		{ id: respParam.remoteLocalSelectReturn.local, label: 'Local' },
	],
	keyboardType_feedback: [
		{ id: respParam.keyboardTypeReturn.japanese, label: 'Japanese' },
		{ id: respParam.keyboardTypeReturn.english, label: 'English' },
	],
}
